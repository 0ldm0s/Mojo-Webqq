.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojo::Webqq::Plugin::IPwhere 3"
.TH Mojo::Webqq::Plugin::IPwhere 3 "2016-12-28" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
插件使用方法给加载插件的账号发 IPwhere \s-1IP\s0
或者QQ群里发IPwhere \s-1IP.\s0
.PP
例子：
.PP
IPwhere 166.111.166.100
.PP
result ：
.PP
taobao 166.111.166.100:中国,北京市,北京市,教育网
sina 166.111.166.100:中国,北京,北京,
baidu 166.111.166.100:北京市海淀区 教育网
pconline 166.111.166.100:北京市,北京市,,北京市 教育网
qqwry 166.111.166.100:清华大学学生宿舍14号楼
.PP
本插件需要安装模块IP::IPwhere，如果你需要纯真的信息
还要安装IP::QQWry，以及下载纯真的数据库QQWry.Dat
下载地址:
.PP
https://github.com/bollwarm/ipwhere/blob/master/QQWry.Dat
.PP
oschina同步更新，如果github太慢通过osc下载
.PP
https://git.oschina.net/ijz/ipwhere/raw/master/QQWry.Dat
安装库可以简单通过cpanm IP::IPwhere IP::QQWry
.PP
并把下面部分注释掉。
.PP
my \f(CW$qqwry\fR = IP::QQWry\->new('QQWry.Dat');
.PP
sub gquery {
.PP
my ($ip)=shift;
my ($base,$info) = \f(CW$qqwry\fR\->query($ip);
my \f(CW$result\fR;
\&\f(CW$result\fR=\*(L"qqwry \f(CW$ip:\fR\*(R";
\&\f(CW$result\fR.=decode('gbk',$base);
\&\f(CW$result\fR.=decode('gbk',$info).\*(L"\en\*(R";
return \f(CW$result\fR;
.PP
}
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 9:" 4
.IX Item "Around line 9:"
Non-ASCII character seen before =encoding in '插件使用方法给加载插件的账号发'. Assuming \s-1UTF\-8\s0
